{"version":3,"sources":["User.js","Comment.js","CommentsList.js","Post.js","PostList.js","api.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","address","city","email","Comment","comment","body","CommentsList","comments","map","singleComment","src_Comment","Post","post","title","src_User","src_CommentsList","PostList","posts","postData","src_Post","getPosts","response","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getComments","_context2","getUsers","_context3","App","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","buttonStatus","setButtonStatus","_useState5","_useState6","loadedPosts","setLoadedPosts","_useState7","_useState8","visiblePosts","setVisiblePosts","_useState9","_useState10","inputValue","setInputValue","type","onClick","_ref2","users","postsWithUsersAndComments","Promise","all","objectSpread2","find","id","userId","filter","postId","onChange","event","target","value","filteredPosts","toConsumableArray","includes","src_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a26ad141.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"post__author author\">\n    <p>\n      Post by:\n      {' '}\n      {user.name}\n      {' '}\n      from\n      {' '}\n      {user.address.city}\n    </p>\n    <p>{user.email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    address: PropTypes.object,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comments__item\">\n    <li className=\"comments__name\">{comment.name}</li>\n    <p className=\"comments__email\">\n      By\n      {' '}\n      {comment.email}\n    </p>\n    <p className=\"comments__text\">{comment.body}</p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentsList = ({ comments }) => (\n  <div className=\"post__comments comments\">\n    <p>Comments:</p>\n    <ul className=\"comments__list\">\n      {comments.map(singleComment => <Comment comment={singleComment} />)}\n    </ul>\n  </div>\n);\n\n// eslint-disable-next-line object-curly-newline\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentsList from './CommentsList';\n\nconst Post = ({ post }) => (\n  <div className=\"post\">\n    <p className=\"post__title\">{post.title}</p>\n    <p className=\"post__body\">{post.body}</p>\n    <User user={post.user} />\n    <CommentsList comments={post.comments} />\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  posts.map(postData => (\n    <Post post={postData} />\n  ))\n);\n\nexport default PostList;\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\nconst commentsURL = 'https://jsonplaceholder.typicode.com/comments';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getPosts = async() => {\n  const response = await fetch(postsURL);\n\n  return response.json();\n};\n\nexport const getComments = async() => {\n  const response = await fetch(commentsURL);\n\n  return response.json();\n};\n\nexport const getUsers = async() => {\n  const response = await fetch(usersURL);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport PostList from './PostList';\nimport { getUsers, getComments, getPosts } from './api';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonStatus, setButtonStatus] = useState(true);\n  const [loadedPosts, setLoadedPosts] = useState([]);\n  const [visiblePosts, setVisiblePosts] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleLoading = async() => {\n    setIsLoading(true);\n\n    const [posts, comments, users] = await Promise.all([\n      getPosts(),\n      getComments(),\n      getUsers(),\n    ]);\n\n    setIsLoading(false);\n    setButtonStatus(false);\n\n    const postsWithUsersAndComments = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    setLoadedPosts(postsWithUsersAndComments);\n    setVisiblePosts(postsWithUsersAndComments);\n\n    return postsWithUsersAndComments;\n  };\n\n  const handleInputValue = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSearchFilter = () => {\n    const filteredPosts = [...loadedPosts].filter(post => (\n      post.title.includes(inputValue) || post.body.includes(inputValue)));\n\n    setVisiblePosts(filteredPosts);\n  };\n\n  if (isLoading) {\n    return (\n      <h1>Loading...</h1>\n    );\n  }\n\n  return buttonStatus\n    ? (\n      <div className=\"box\">\n        <button\n          type=\"button\"\n          onClick={handleLoading}\n          className=\"filter__button button\"\n        >\n          Load posts\n        </button>\n      </div>\n    )\n    : (\n      <div className=\"App\">\n        <div>\n          <input\n            type=\"text\"\n            className=\"filter__input\"\n            onChange={handleInputValue}\n          />\n          <button\n            type=\"button\"\n            className=\"filter__button\"\n            onClick={handleSearchFilter}\n          >\n            Search\n          </button>\n        </div>\n        <PostList posts={visiblePosts} />\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}